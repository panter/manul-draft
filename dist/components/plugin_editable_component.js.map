{"version":3,"sources":["../../src/components/plugin_editable_component.jsx"],"names":["Styles","windowWidth","showDialog","dimensions","margin","dialogWidth","dialogLeftPositionMax","width","dialogLeftPositionMin","left","dialogLeftPosition","Math","min","base","position","content","cursor","dialog","opacity","zIndex","border","boxShadow","visibility","backgroundColor","padding","PluginEditableComponent","i18nNamespace","schema","hasCustomHover","setDimensions","setShowDialog","cancel","remove","updateData","dataMap","children","styles","e","stopPropagation","outline","pointerEvents"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,OAAkD;AAAA,MAA/CC,WAA+C,QAA/CA,WAA+C;AAAA,MAAlCC,UAAkC,QAAlCA,UAAkC;AAAA,6BAAtBC,UAAsB;AAAA,MAAtBA,UAAsB,mCAAT,EAAS;;AAC/D,MAAMC,SAAS,EAAf;AACA,MAAMC,cAAc,GAApB;AACA,MAAMC,wBAAwBH,WAAWI,KAAX,GAAmBH,MAAjD;AACA,MAAMI,wBACJP,cAAcE,WAAWM,IAAzB,GAAgCJ,WAAhC,GAA8CD,MADhD;AAEA,MAAMM,qBAAqBC,KAAKC,GAAL,CACzBN,qBADyB,EAEzBE,qBAFyB,CAA3B;AAIA,SAAO;AACLK,UAAM;AACJC,gBAAU;AACV;AAFI,KADD;AAKLC,aAAS;AACP;AACA;AACAC,cAAQ,SAHD;AAIPF,gBAAU,UAJH;;AAMP,gBAAU;AACR;AADQ;AANH,KALJ;AAeLG,YAAQ;AACN;AACAH,gBAAU,UAFJ;AAGNI,eAAShB,aAAa,CAAb,GAAiB,CAHpB;AAINiB,cAAQ,EAJF;AAKNZ,aAAOF,WALD;AAMNI,YAAMC,sBAAsB,CANtB;AAON;AACAU,cAAQ,iBARF;AASNC,iBAAW,kBATL;AAUNC,kBAAYpB,aAAa,SAAb,GAAyB,QAV/B;AAWNqB,uBAAiB,OAXX;AAYNC,eAAS;AAZH;AAfH,GAAP;AA8BD,CAxCD;AAyCA,IAAMC,0BAA0B,SAA1BA,uBAA0B,QAe1B;AAAA,MAdJC,aAcI,SAdJA,aAcI;AAAA,MAbJC,MAaI,SAbJA,MAaI;AAAA,MAZJC,cAYI,SAZJA,cAYI;AAAA,MAXJC,aAWI,SAXJA,aAWI;AAAA,MAVJC,aAUI,SAVJA,aAUI;AAAA,MATJC,MASI,SATJA,MASI;AAAA,MARJC,MAQI,SARJA,MAQI;AAAA,MAPJC,UAOI,SAPJA,UAOI;AAAA,MANJC,OAMI,SANJA,OAMI;AAAA,MALJC,QAKI,SALJA,QAKI;AAAA,MAJJjC,UAII,SAJJA,UAII;AAAA,+BAHJC,UAGI;AAAA,MAHJA,UAGI,oCAHS,EAGT;AAAA,MAFJF,WAEI,SAFJA,WAEI;;AACJ,MAAMmC,SAASpC,OAAO;AACpBE,0BADoB;AAEpBC,0BAFoB;AAGpByB,kCAHoB;AAIpB3B;AAJoB,GAAP,CAAf;;AAOA,SACE;AAAA;AAAA,MAAK,OAAOmC,OAAOvB,IAAnB;AACGX,kBACC;AAAA;AAAA;AACE;AAAA;AAAA,UAAK,OAAOkC,OAAOnB,MAAnB;AACE;AACE,kBAAQc,MADV;AAEE,mBAASG,OAFX;AAGE,kBAAQF,MAHV;AAIE,yBAAeN,aAJjB;AAKE,sBAAYO,UALd;AAME,kBAAQN;AANV;AADF;AADF,KAFJ;AAeE;AAAA;AAAA;AACE,eAAOS,OAAOrB,OADhB;AAEE,iBAAS,oBAAK;AACZsB,YAAEC,eAAF;AACAR,wBAAc,CAAC5B,UAAf;AACD;AALH;AAOE;AAAA;AAAA;AACE,iBAAO;AACLqC,qBAASrC,cAAc,kBADlB;AAELsC,2BAAe,CAACZ,cAAD,IAAmB;AAF7B;AADT;AAME;AAAA;AAAA,YAAS,eAAe1B,UAAxB,EAAoC,WAAW2B,aAA/C;AACGM;AADH;AANF;AAPF;AAfF,GADF;AAoCD,CA3DD;;kBA6DeV,uB","file":"plugin_editable_component.js","sourcesContent":["import React from 'react';\nimport Measure from 'react-measure';\nimport Draggable from 'react-draggable';\nimport DialogPlugin from './dialog_plugin';\n\nconst Styles = ({ windowWidth, showDialog, dimensions = {} }) => {\n  const margin = 15;\n  const dialogWidth = 320;\n  const dialogLeftPositionMax = dimensions.width + margin;\n  const dialogLeftPositionMin =\n    windowWidth - dimensions.left - dialogWidth - margin;\n  const dialogLeftPosition = Math.min(\n    dialogLeftPositionMax,\n    dialogLeftPositionMin\n  );\n  return {\n    base: {\n      position: 'relative'\n      // zIndex: showDialog ? 1000 : null,\n    },\n    content: {\n      // ...theme.misc.defaultTransition,\n      // ...(showDialog ? theme.borders.editingHighlightingActive() : {}),\n      cursor: 'pointer',\n      position: 'relative',\n\n      ':hover': {\n        // ...(!hasCustomHover ? { ...theme.borders.editingHighlighting() } : {}),\n      }\n    },\n    dialog: {\n      // ...theme.misc.defaultTransition,\n      position: 'absolute',\n      opacity: showDialog ? 1 : 0,\n      zIndex: 10,\n      width: dialogWidth,\n      left: dialogLeftPosition || 0,\n      // ...theme.borders.editingHighlightingActive(),\n      border: '1px solid black',\n      boxShadow: '2px 2px 8px #333',\n      visibility: showDialog ? 'visible' : 'hidden',\n      backgroundColor: 'white',\n      padding: 10\n    }\n  };\n};\nconst PluginEditableComponent = ({\n  i18nNamespace,\n  schema,\n  hasCustomHover,\n  setDimensions,\n  setShowDialog,\n  cancel,\n  remove,\n  updateData,\n  dataMap,\n  children,\n  showDialog,\n  dimensions = {},\n  windowWidth\n  // components from context\n}) => {\n  const styles = Styles({\n    showDialog,\n    dimensions,\n    hasCustomHover,\n    windowWidth\n  });\n\n  return (\n    <div style={styles.base}>\n      {showDialog && (\n        <Draggable>\n          <div style={styles.dialog}>\n            <DialogPlugin\n              cancel={cancel}\n              dataMap={dataMap}\n              remove={remove}\n              i18nNamespace={i18nNamespace}\n              updateData={updateData}\n              schema={schema}\n            />\n          </div>\n        </Draggable>\n      )}\n      <div\n        style={styles.content}\n        onClick={e => {\n          e.stopPropagation();\n          setShowDialog(!showDialog);\n        }}\n      >\n        <div\n          style={{\n            outline: showDialog && '1px dotted black',\n            pointerEvents: !hasCustomHover && 'none'\n          }}\n        >\n          <Measure shouldMeasure={showDialog} onMeasure={setDimensions}>\n            {children}\n          </Measure>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PluginEditableComponent;\n"]}