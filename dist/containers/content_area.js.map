{"version":3,"sources":["../../src/containers/content_area.js"],"names":["dataComposer","onData","context","contentId","entities","sampleContent","Meteor","Collections","i18n","locale","getLocale","contentLoaded","subscribe","ready","content","Contents","findOne","initialEditorState","CompositeDecorator","copyLocales","l","value","stateComposer","LocalState","Roles","canEdit","userIsInRole","userId","cancelEditing","delete","isEditing","equals","startEditing","set","depsMapper","actions","save","cm","manulDraft","copyFromLocale","fromContent","fromLocale","props","newContentState","convertFromRaw","newContent","Modifier","replaceWithFragment","editorState","getCurrentContent","getSelection","getBlockMap","newEditorState","EditorState","push","setEditorState","saveAndClose","editor","convertToRaw","error","saveAndEdit","cancel","blockPluginDialogIsActive","block","getData","get","getBlocksAsArray","blockPluginProps","blockPlugins","megadraftBlockPlugins","map","plugin","entityInputs","e","inputComponent"],"mappings":"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","file":"content_area.js","sourcesContent":["import {\n  pure,\n  withProps,\n  withState,\n  withPropsOnChange,\n  withHandlers,\n  onlyUpdateForKeys\n} from 'recompose';\nimport { DraftJS, editorStateFromRaw } from 'megadraft';\n\nimport {\n  any,\n  invoke,\n  defer,\n  keys,\n  filter,\n  isEmpty,\n  flow,\n  get,\n  keyBy,\n  mapValues,\n  isEqual\n} from 'lodash/fp';\nimport { useDeps, composeAll } from '@storybook/mantra-core';\n\nimport ContentArea from '../components/content_area';\nimport composeWithTracker from '../utils/composeWithTracker';\n\nexport const dataComposer = (\n  { context, contentId, entities = [], sampleContent = null },\n  onData\n) => {\n  const { Meteor, Collections, i18n } = context();\n  const locale = i18n.getLocale();\n  const contentLoaded = Meteor.subscribe(\n    'contents.one',\n    contentId,\n    locale\n  ).ready();\n\n  const content = Collections.Contents.findOne(contentId);\n\n  if (contentLoaded) {\n    const initialEditorState = editorStateFromRaw(\n      content ? get(`value.${locale}`, content) : sampleContent,\n      new DraftJS.CompositeDecorator(entities || [])\n    );\n    const copyLocales =\n      content &&\n      flow(\n        keys,\n        filter(l => !isEmpty(get(['value', l], content)))\n      )(content.value);\n    onData(null, { content, locale, copyLocales, initialEditorState });\n  }\n};\n\nexport const stateComposer = ({ context, contentId }, onData) => {\n  const { LocalState, Roles, Meteor } = context();\n  const canEdit = Roles.userIsInRole(Meteor.userId(), 'admin');\n  const cancelEditing = () => LocalState.delete('cm.editingMode');\n  const isEditing = LocalState.equals('cm.editingMode', contentId);\n  const startEditing = () => LocalState.set('cm.editingMode', contentId);\n  onData(null, { canEdit, isEditing, cancelEditing, startEditing });\n};\n\nexport const depsMapper = (context, actions) => ({\n  context: () => context,\n  save: actions.cm.save,\n  ...context.manulDraft\n});\n\nexport default composeAll(\n  withHandlers({\n    copyFromLocale: props => fromLocale => {\n      // clone the content\n      const fromContent = get(`value.${fromLocale}`, props.content);\n      if (fromContent) {\n        // some draftjs voodoo to insert the rawContent into the current selection\n        const newContentState = DraftJS.convertFromRaw(fromContent);\n        const newContent = DraftJS.Modifier.replaceWithFragment(\n          props.editorState.getCurrentContent(),\n          props.editorState.getSelection(),\n          newContentState.getBlockMap()\n        );\n        const newEditorState = DraftJS.EditorState.push(\n          props.editorState,\n          newContent,\n          'insert-fragment'\n        );\n        props.setEditorState(newEditorState);\n      }\n    }\n  }),\n  // wait for https://github.com/acdlite/recompose/issues/259\n  // this here is a dirty workaround\n  withPropsOnChange(\n    ['initialEditorState'],\n    ({ initialEditorState, setEditorState }) => {\n      /* eslint lodash-fp/no-unused-result: 0*/\n      defer(() => setEditorState(initialEditorState));\n    }\n  ),\n  withHandlers({\n    saveAndClose: ({\n      save,\n      cancelEditing,\n      editorState,\n      contentId,\n      locale\n    }) => () => {\n      save(\n        {\n          contentId,\n          locale,\n          editor: DraftJS.convertToRaw(editorState.getCurrentContent())\n        },\n        error => !error && cancelEditing(false)\n      );\n    },\n    saveAndEdit: ({ save, editorState, contentId, locale }) => () => {\n      save({\n        contentId,\n        locale,\n        editor: DraftJS.convertToRaw(editorState.getCurrentContent())\n      });\n    },\n    cancel: ({ cancelEditing, setEditorState, initialEditorState }) => () => {\n      setEditorState(initialEditorState);\n      cancelEditing(false);\n    }\n  }),\n  withProps(({ editorState }) => ({\n    blockPluginDialogIsActive: any(block => block.getData().get('showDialog'))(\n      editorState.getCurrentContent().getBlocksAsArray()\n    )\n  })),\n  withHandlers({\n    setEditorState: props => newEditorState => {\n      if (!isEqual(props.editorState, newEditorState)) {\n        props.setEditorState(newEditorState);\n      }\n    }\n  }),\n  withState(\n    'editorState',\n    'setEditorState',\n    ({ initialEditorState }) => initialEditorState\n  ),\n  pure,\n  composeWithTracker(dataComposer),\n  withProps(\n    ({\n      blockPluginProps = {},\n      isEditing,\n      entities = [],\n      blockPlugins = []\n    }) => ({\n      megadraftBlockPlugins: blockPlugins.map(plugin =>\n        plugin({ isEditing, blockPluginProps })\n      ),\n      entityInputs: flow(\n        keyBy('_id'),\n        mapValues(e => e.inputComponent)\n      )(entities)\n    })\n  ),\n  composeWithTracker(stateComposer),\n  useDeps(depsMapper),\n  onlyUpdateForKeys(['contentId'])\n)(ContentArea);\n"]}